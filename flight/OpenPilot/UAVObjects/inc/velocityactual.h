/**
 ******************************************************************************
 * @addtogroup UAVObjects OpenPilot UAVObjects
 * @{ 
 * @addtogroup VelocityActual VelocityActual 
 * @brief Updated by @ref AHRSCommsModule and used within @ref GuidanceModulefor velocity control
 *
 * Autogenerated files and functions for VelocityActual Object
 
 * @{ 
 *
 * @file       velocityactual.h
 * @author     The OpenPilot Team, http://www.openpilot.org Copyright (C) 2010.
 * @brief      Implementation of the VelocityActual object. This file has been 
 *             automatically generated by the UAVObjectGenerator.
 * 
 * @note       Object definition file: velocityactual.xml. 
 *             This is an automatically generated file.
 *             DO NOT modify manually.
 *
 * @see        The GNU Public License (GPL) Version 3
 *
 *****************************************************************************/
/*
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
 * for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 */

#ifndef VELOCITYACTUAL_H
#define VELOCITYACTUAL_H

// Object constants
#define VELOCITYACTUAL_OBJID 1207999624U
#define VELOCITYACTUAL_NAME "VelocityActual"
#define VELOCITYACTUAL_METANAME "VelocityActualMeta"
#define VELOCITYACTUAL_ISSINGLEINST 1
#define VELOCITYACTUAL_ISSETTINGS 0
#define VELOCITYACTUAL_NUMBYTES sizeof(VelocityActualData)

// Object access macros
/**
 * @function VelocityActualGet(dataOut)
 * @brief Populate a VelocityActualData object
 * @param[out] dataOut 
 */
#define VelocityActualGet(dataOut) UAVObjGetData(VelocityActualHandle(), dataOut)
#define VelocityActualSet(dataIn) UAVObjSetData(VelocityActualHandle(), dataIn)
#define VelocityActualInstGet(instId, dataOut) UAVObjGetInstanceData(VelocityActualHandle(), instId, dataOut)
#define VelocityActualInstSet(instId, dataIn) UAVObjSetInstanceData(VelocityActualHandle(), instId, dataIn)
#define VelocityActualConnectQueue(queue) UAVObjConnectQueue(VelocityActualHandle(), queue, EV_MASK_ALL_UPDATES)
#define VelocityActualConnectCallback(cb) UAVObjConnectCallback(VelocityActualHandle(), cb, EV_MASK_ALL_UPDATES)
#define VelocityActualCreateInstance() UAVObjCreateInstance(VelocityActualHandle())
#define VelocityActualRequestUpdate() UAVObjRequestUpdate(VelocityActualHandle())
#define VelocityActualRequestInstUpdate(instId) UAVObjRequestInstanceUpdate(VelocityActualHandle(), instId)
#define VelocityActualUpdated() UAVObjUpdated(VelocityActualHandle())
#define VelocityActualInstUpdated(instId) UAVObjUpdated(VelocityActualHandle(), instId)
#define VelocityActualGetMetadata(dataOut) UAVObjGetMetadata(VelocityActualHandle(), dataOut)
#define VelocityActualSetMetadata(dataIn) UAVObjSetMetadata(VelocityActualHandle(), dataIn)
#define VelocityActualReadOnly(dataIn) UAVObjReadOnly(VelocityActualHandle())

// Object data
typedef struct {
    int32_t North;
    int32_t East;
    int32_t Down;

} __attribute__((packed)) VelocityActualData;

// Field information
// Field North information
// Field East information
// Field Down information


// Generic interface functions
int32_t VelocityActualInitialize();
UAVObjHandle VelocityActualHandle();

#endif // VELOCITYACTUAL_H

/**
 * @}
 * @}
 */
