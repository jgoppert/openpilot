/**
 ******************************************************************************
 * @addtogroup UAVObjects OpenPilot UAVObjects
 * @{ 
 * @addtogroup VelocityDesired VelocityDesired 
 * @brief Used within @ref GuidanceModule to communicate between the task computing the desired velocity and the PID loop to achieve it (running at different rates).
 *
 * Autogenerated files and functions for VelocityDesired Object
 
 * @{ 
 *
 * @file       velocitydesired.h
 * @author     The OpenPilot Team, http://www.openpilot.org Copyright (C) 2010.
 * @brief      Implementation of the VelocityDesired object. This file has been 
 *             automatically generated by the UAVObjectGenerator.
 * 
 * @note       Object definition file: velocitydesired.xml. 
 *             This is an automatically generated file.
 *             DO NOT modify manually.
 *
 * @see        The GNU Public License (GPL) Version 3
 *
 *****************************************************************************/
/*
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
 * for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 */

#ifndef VELOCITYDESIRED_H
#define VELOCITYDESIRED_H

// Object constants
#define VELOCITYDESIRED_OBJID 305094202U
#define VELOCITYDESIRED_NAME "VelocityDesired"
#define VELOCITYDESIRED_METANAME "VelocityDesiredMeta"
#define VELOCITYDESIRED_ISSINGLEINST 1
#define VELOCITYDESIRED_ISSETTINGS 0
#define VELOCITYDESIRED_NUMBYTES sizeof(VelocityDesiredData)

// Object access macros
/**
 * @function VelocityDesiredGet(dataOut)
 * @brief Populate a VelocityDesiredData object
 * @param[out] dataOut 
 */
#define VelocityDesiredGet(dataOut) UAVObjGetData(VelocityDesiredHandle(), dataOut)
#define VelocityDesiredSet(dataIn) UAVObjSetData(VelocityDesiredHandle(), dataIn)
#define VelocityDesiredInstGet(instId, dataOut) UAVObjGetInstanceData(VelocityDesiredHandle(), instId, dataOut)
#define VelocityDesiredInstSet(instId, dataIn) UAVObjSetInstanceData(VelocityDesiredHandle(), instId, dataIn)
#define VelocityDesiredConnectQueue(queue) UAVObjConnectQueue(VelocityDesiredHandle(), queue, EV_MASK_ALL_UPDATES)
#define VelocityDesiredConnectCallback(cb) UAVObjConnectCallback(VelocityDesiredHandle(), cb, EV_MASK_ALL_UPDATES)
#define VelocityDesiredCreateInstance() UAVObjCreateInstance(VelocityDesiredHandle())
#define VelocityDesiredRequestUpdate() UAVObjRequestUpdate(VelocityDesiredHandle())
#define VelocityDesiredRequestInstUpdate(instId) UAVObjRequestInstanceUpdate(VelocityDesiredHandle(), instId)
#define VelocityDesiredUpdated() UAVObjUpdated(VelocityDesiredHandle())
#define VelocityDesiredInstUpdated(instId) UAVObjUpdated(VelocityDesiredHandle(), instId)
#define VelocityDesiredGetMetadata(dataOut) UAVObjGetMetadata(VelocityDesiredHandle(), dataOut)
#define VelocityDesiredSetMetadata(dataIn) UAVObjSetMetadata(VelocityDesiredHandle(), dataIn)
#define VelocityDesiredReadOnly(dataIn) UAVObjReadOnly(VelocityDesiredHandle())

// Object data
typedef struct {
    int32_t North;
    int32_t East;
    int32_t Down;

} __attribute__((packed)) VelocityDesiredData;

// Field information
// Field North information
// Field East information
// Field Down information


// Generic interface functions
int32_t VelocityDesiredInitialize();
UAVObjHandle VelocityDesiredHandle();

#endif // VELOCITYDESIRED_H

/**
 * @}
 * @}
 */
