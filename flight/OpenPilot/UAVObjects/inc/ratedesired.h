/**
 ******************************************************************************
 * @addtogroup UAVObjects OpenPilot UAVObjects
 * @{ 
 * @addtogroup RateDesired RateDesired 
 * @brief Status for the matrix mixer showing the output of each mixer after all scaling
 *
 * Autogenerated files and functions for RateDesired Object
 
 * @{ 
 *
 * @file       ratedesired.h
 * @author     The OpenPilot Team, http://www.openpilot.org Copyright (C) 2010.
 * @brief      Implementation of the RateDesired object. This file has been 
 *             automatically generated by the UAVObjectGenerator.
 * 
 * @note       Object definition file: ratedesired.xml. 
 *             This is an automatically generated file.
 *             DO NOT modify manually.
 *
 * @see        The GNU Public License (GPL) Version 3
 *
 *****************************************************************************/
/*
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
 * for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 */

#ifndef RATEDESIRED_H
#define RATEDESIRED_H

// Object constants
#define RATEDESIRED_OBJID 3124868380U
#define RATEDESIRED_NAME "RateDesired"
#define RATEDESIRED_METANAME "RateDesiredMeta"
#define RATEDESIRED_ISSINGLEINST 1
#define RATEDESIRED_ISSETTINGS 0
#define RATEDESIRED_NUMBYTES sizeof(RateDesiredData)

// Object access macros
/**
 * @function RateDesiredGet(dataOut)
 * @brief Populate a RateDesiredData object
 * @param[out] dataOut 
 */
#define RateDesiredGet(dataOut) UAVObjGetData(RateDesiredHandle(), dataOut)
#define RateDesiredSet(dataIn) UAVObjSetData(RateDesiredHandle(), dataIn)
#define RateDesiredInstGet(instId, dataOut) UAVObjGetInstanceData(RateDesiredHandle(), instId, dataOut)
#define RateDesiredInstSet(instId, dataIn) UAVObjSetInstanceData(RateDesiredHandle(), instId, dataIn)
#define RateDesiredConnectQueue(queue) UAVObjConnectQueue(RateDesiredHandle(), queue, EV_MASK_ALL_UPDATES)
#define RateDesiredConnectCallback(cb) UAVObjConnectCallback(RateDesiredHandle(), cb, EV_MASK_ALL_UPDATES)
#define RateDesiredCreateInstance() UAVObjCreateInstance(RateDesiredHandle())
#define RateDesiredRequestUpdate() UAVObjRequestUpdate(RateDesiredHandle())
#define RateDesiredRequestInstUpdate(instId) UAVObjRequestInstanceUpdate(RateDesiredHandle(), instId)
#define RateDesiredUpdated() UAVObjUpdated(RateDesiredHandle())
#define RateDesiredInstUpdated(instId) UAVObjUpdated(RateDesiredHandle(), instId)
#define RateDesiredGetMetadata(dataOut) UAVObjGetMetadata(RateDesiredHandle(), dataOut)
#define RateDesiredSetMetadata(dataIn) UAVObjSetMetadata(RateDesiredHandle(), dataIn)
#define RateDesiredReadOnly(dataIn) UAVObjReadOnly(RateDesiredHandle())

// Object data
typedef struct {
    float Roll;
    float Pitch;
    float Yaw;

} __attribute__((packed)) RateDesiredData;

// Field information
// Field Roll information
// Field Pitch information
// Field Yaw information


// Generic interface functions
int32_t RateDesiredInitialize();
UAVObjHandle RateDesiredHandle();

#endif // RATEDESIRED_H

/**
 * @}
 * @}
 */
