/**
 ******************************************************************************
 * @addtogroup UAVObjects OpenPilot UAVObjects
 * @{ 
 * @addtogroup PositionDesired PositionDesired 
 * @brief The position the craft is trying t achieve.  Can come from GCS or @ref PathPlanner 
 *
 * Autogenerated files and functions for PositionDesired Object
 
 * @{ 
 *
 * @file       positiondesired.h
 * @author     The OpenPilot Team, http://www.openpilot.org Copyright (C) 2010.
 * @brief      Implementation of the PositionDesired object. This file has been 
 *             automatically generated by the UAVObjectGenerator.
 * 
 * @note       Object definition file: positiondesired.xml. 
 *             This is an automatically generated file.
 *             DO NOT modify manually.
 *
 * @see        The GNU Public License (GPL) Version 3
 *
 *****************************************************************************/
/*
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
 * for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 */

#ifndef POSITIONDESIRED_H
#define POSITIONDESIRED_H

// Object constants
#define POSITIONDESIRED_OBJID 801433018U
#define POSITIONDESIRED_NAME "PositionDesired"
#define POSITIONDESIRED_METANAME "PositionDesiredMeta"
#define POSITIONDESIRED_ISSINGLEINST 1
#define POSITIONDESIRED_ISSETTINGS 0
#define POSITIONDESIRED_NUMBYTES sizeof(PositionDesiredData)

// Object access macros
/**
 * @function PositionDesiredGet(dataOut)
 * @brief Populate a PositionDesiredData object
 * @param[out] dataOut 
 */
#define PositionDesiredGet(dataOut) UAVObjGetData(PositionDesiredHandle(), dataOut)
#define PositionDesiredSet(dataIn) UAVObjSetData(PositionDesiredHandle(), dataIn)
#define PositionDesiredInstGet(instId, dataOut) UAVObjGetInstanceData(PositionDesiredHandle(), instId, dataOut)
#define PositionDesiredInstSet(instId, dataIn) UAVObjSetInstanceData(PositionDesiredHandle(), instId, dataIn)
#define PositionDesiredConnectQueue(queue) UAVObjConnectQueue(PositionDesiredHandle(), queue, EV_MASK_ALL_UPDATES)
#define PositionDesiredConnectCallback(cb) UAVObjConnectCallback(PositionDesiredHandle(), cb, EV_MASK_ALL_UPDATES)
#define PositionDesiredCreateInstance() UAVObjCreateInstance(PositionDesiredHandle())
#define PositionDesiredRequestUpdate() UAVObjRequestUpdate(PositionDesiredHandle())
#define PositionDesiredRequestInstUpdate(instId) UAVObjRequestInstanceUpdate(PositionDesiredHandle(), instId)
#define PositionDesiredUpdated() UAVObjUpdated(PositionDesiredHandle())
#define PositionDesiredInstUpdated(instId) UAVObjUpdated(PositionDesiredHandle(), instId)
#define PositionDesiredGetMetadata(dataOut) UAVObjGetMetadata(PositionDesiredHandle(), dataOut)
#define PositionDesiredSetMetadata(dataIn) UAVObjSetMetadata(PositionDesiredHandle(), dataIn)
#define PositionDesiredReadOnly(dataIn) UAVObjReadOnly(PositionDesiredHandle())

// Object data
typedef struct {
    int32_t North;
    int32_t East;
    int32_t Down;

} __attribute__((packed)) PositionDesiredData;

// Field information
// Field North information
// Field East information
// Field Down information


// Generic interface functions
int32_t PositionDesiredInitialize();
UAVObjHandle PositionDesiredHandle();

#endif // POSITIONDESIRED_H

/**
 * @}
 * @}
 */
