/**
 ******************************************************************************
 * @addtogroup UAVObjects OpenPilot UAVObjects
 * @{ 
 * @addtogroup VTOLStatus VTOLStatus 
 * @brief Status for VTOL crafts showing the thrust from each engine
 *
 * Autogenerated files and functions for VTOLStatus Object
 
 * @{ 
 *
 * @file       vtolstatus.h
 * @author     The OpenPilot Team, http://www.openpilot.org Copyright (C) 2010.
 * @brief      Implementation of the VTOLStatus object. This file has been 
 *             automatically generated by the UAVObjectGenerator.
 * 
 * @note       Object definition file: vtolstatus.xml. 
 *             This is an automatically generated file.
 *             DO NOT modify manually.
 *
 * @see        The GNU Public License (GPL) Version 3
 *
 *****************************************************************************/
/*
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
 * for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 */

#ifndef VTOLSTATUS_H
#define VTOLSTATUS_H

// Object constants
#define VTOLSTATUS_OBJID 957086004U
#define VTOLSTATUS_NAME "VTOLStatus"
#define VTOLSTATUS_METANAME "VTOLStatusMeta"
#define VTOLSTATUS_ISSINGLEINST 1
#define VTOLSTATUS_ISSETTINGS 0
#define VTOLSTATUS_NUMBYTES sizeof(VTOLStatusData)

// Object access macros
/**
 * @function VTOLStatusGet(dataOut)
 * @brief Populate a VTOLStatusData object
 * @param[out] dataOut 
 */
#define VTOLStatusGet(dataOut) UAVObjGetData(VTOLStatusHandle(), dataOut)
#define VTOLStatusSet(dataIn) UAVObjSetData(VTOLStatusHandle(), dataIn)
#define VTOLStatusInstGet(instId, dataOut) UAVObjGetInstanceData(VTOLStatusHandle(), instId, dataOut)
#define VTOLStatusInstSet(instId, dataIn) UAVObjSetInstanceData(VTOLStatusHandle(), instId, dataIn)
#define VTOLStatusConnectQueue(queue) UAVObjConnectQueue(VTOLStatusHandle(), queue, EV_MASK_ALL_UPDATES)
#define VTOLStatusConnectCallback(cb) UAVObjConnectCallback(VTOLStatusHandle(), cb, EV_MASK_ALL_UPDATES)
#define VTOLStatusCreateInstance() UAVObjCreateInstance(VTOLStatusHandle())
#define VTOLStatusRequestUpdate() UAVObjRequestUpdate(VTOLStatusHandle())
#define VTOLStatusRequestInstUpdate(instId) UAVObjRequestInstanceUpdate(VTOLStatusHandle(), instId)
#define VTOLStatusUpdated() UAVObjUpdated(VTOLStatusHandle())
#define VTOLStatusInstUpdated(instId) UAVObjUpdated(VTOLStatusHandle(), instId)
#define VTOLStatusGetMetadata(dataOut) UAVObjGetMetadata(VTOLStatusHandle(), dataOut)
#define VTOLStatusSetMetadata(dataIn) UAVObjSetMetadata(VTOLStatusHandle(), dataIn)
#define VTOLStatusReadOnly(dataIn) UAVObjReadOnly(VTOLStatusHandle())

// Object data
typedef struct {
    float MotorN;
    float MotorNE;
    float MotorE;
    float MotorSE;
    float MotorS;
    float MotorSW;
    float MotorW;
    float MotorNW;

} __attribute__((packed)) VTOLStatusData;

// Field information
// Field MotorN information
// Field MotorNE information
// Field MotorE information
// Field MotorSE information
// Field MotorS information
// Field MotorSW information
// Field MotorW information
// Field MotorNW information


// Generic interface functions
int32_t VTOLStatusInitialize();
UAVObjHandle VTOLStatusHandle();

#endif // VTOLSTATUS_H

/**
 * @}
 * @}
 */
