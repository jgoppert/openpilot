/**
 ******************************************************************************
 * @addtogroup UAVObjects OpenPilot UAVObjects
 * @{ 
 * @addtogroup FirmwareIAPObj FirmwareIAPObj 
 * @brief Firmware IAP
 *
 * Autogenerated files and functions for FirmwareIAPObj Object
 
 * @{ 
 *
 * @file       firmwareiapobj.h
 * @author     The OpenPilot Team, http://www.openpilot.org Copyright (C) 2010.
 * @brief      Implementation of the FirmwareIAPObj object. This file has been 
 *             automatically generated by the UAVObjectGenerator.
 * 
 * @note       Object definition file: firmwareiap.xml. 
 *             This is an automatically generated file.
 *             DO NOT modify manually.
 *
 * @see        The GNU Public License (GPL) Version 3
 *
 *****************************************************************************/
/*
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
 * for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 */

#ifndef FIRMWAREIAPOBJ_H
#define FIRMWAREIAPOBJ_H

// Object constants
#define FIRMWAREIAPOBJ_OBJID 879185696U
#define FIRMWAREIAPOBJ_NAME "FirmwareIAPObj"
#define FIRMWAREIAPOBJ_METANAME "FirmwareIAPObjMeta"
#define FIRMWAREIAPOBJ_ISSINGLEINST 1
#define FIRMWAREIAPOBJ_ISSETTINGS 0
#define FIRMWAREIAPOBJ_NUMBYTES sizeof(FirmwareIAPObjData)

// Object access macros
/**
 * @function FirmwareIAPObjGet(dataOut)
 * @brief Populate a FirmwareIAPObjData object
 * @param[out] dataOut 
 */
#define FirmwareIAPObjGet(dataOut) UAVObjGetData(FirmwareIAPObjHandle(), dataOut)
#define FirmwareIAPObjSet(dataIn) UAVObjSetData(FirmwareIAPObjHandle(), dataIn)
#define FirmwareIAPObjInstGet(instId, dataOut) UAVObjGetInstanceData(FirmwareIAPObjHandle(), instId, dataOut)
#define FirmwareIAPObjInstSet(instId, dataIn) UAVObjSetInstanceData(FirmwareIAPObjHandle(), instId, dataIn)
#define FirmwareIAPObjConnectQueue(queue) UAVObjConnectQueue(FirmwareIAPObjHandle(), queue, EV_MASK_ALL_UPDATES)
#define FirmwareIAPObjConnectCallback(cb) UAVObjConnectCallback(FirmwareIAPObjHandle(), cb, EV_MASK_ALL_UPDATES)
#define FirmwareIAPObjCreateInstance() UAVObjCreateInstance(FirmwareIAPObjHandle())
#define FirmwareIAPObjRequestUpdate() UAVObjRequestUpdate(FirmwareIAPObjHandle())
#define FirmwareIAPObjRequestInstUpdate(instId) UAVObjRequestInstanceUpdate(FirmwareIAPObjHandle(), instId)
#define FirmwareIAPObjUpdated() UAVObjUpdated(FirmwareIAPObjHandle())
#define FirmwareIAPObjInstUpdated(instId) UAVObjUpdated(FirmwareIAPObjHandle(), instId)
#define FirmwareIAPObjGetMetadata(dataOut) UAVObjGetMetadata(FirmwareIAPObjHandle(), dataOut)
#define FirmwareIAPObjSetMetadata(dataIn) UAVObjSetMetadata(FirmwareIAPObjHandle(), dataIn)
#define FirmwareIAPObjReadOnly(dataIn) UAVObjReadOnly(FirmwareIAPObjHandle())

// Object data
typedef struct {
    uint16_t Command;
    uint8_t Description[100];
    uint8_t HWVersion;
    uint8_t Target;
    uint8_t ArmReset;
    uint32_t crc;

} __attribute__((packed)) FirmwareIAPObjData;

// Field information
// Field Command information
// Field Description information
/* Number of elements for field Description */
#define FIRMWAREIAPOBJ_DESCRIPTION_NUMELEM 100
// Field HWVersion information
// Field Target information
// Field ArmReset information
// Field crc information


// Generic interface functions
int32_t FirmwareIAPObjInitialize();
UAVObjHandle FirmwareIAPObjHandle();

#endif // FIRMWAREIAPOBJ_H

/**
 * @}
 * @}
 */
