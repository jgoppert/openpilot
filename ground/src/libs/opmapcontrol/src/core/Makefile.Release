#############################################################################
# Makefile for building: libcore
# Generated by qmake (2.01a) (Qt 4.6.2) on: seg 14. Jun 17:55:34 2010
# Project:  core.pro
# Template: lib
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DUNICODE -DQT_LARGEFILE_SUPPORT -DQT_NO_DEBUG -DQT_SQL_LIB -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB -DQT_THREAD_SUPPORT
CFLAGS        = -O2 -Wall $(DEFINES)
CXXFLAGS      = -O2 -frtti -fexceptions -mthreads -Wall $(DEFINES)
INCPATH       = -I"c:\Qt\2010.02.1\qt\include\QtCore" -I"c:\Qt\2010.02.1\qt\include\QtNetwork" -I"c:\Qt\2010.02.1\qt\include\QtGui" -I"c:\Qt\2010.02.1\qt\include\QtSql" -I"c:\Qt\2010.02.1\qt\include" -I"c:\Qt\2010.02.1\qt\include\ActiveQt" -I"mocs" -I"c:\Qt\2010.02.1\qt\mkspecs\win32-g++"
LIB        =        ar -ru
QMAKE         = c:\qt\2010.02.1\qt\bin\qmake.exe
IDC           = c:\Qt\2010.02.1\qt\bin\idc.exe
IDL           = midl
ZIP           = zip -r -9
DEF_FILE      = 
RES_FILE      = 
COPY          = copy /y
COPY_FILE     = $(COPY)
COPY_DIR      = xcopy /s /q /y /i
DEL_FILE      = del
DEL_DIR       = rmdir
MOVE          = move
CHK_DIR_EXISTS= if not exist
MKDIR         = mkdir
INSTALL_FILE    = $(COPY_FILE)
INSTALL_PROGRAM = $(COPY_FILE)
INSTALL_DIR     = $(COPY_DIR)

####### Output directory

OBJECTS_DIR   = objs

####### Files

SOURCES       = opmaps.cpp \
		pureimagecache.cpp \
		pureimage.cpp \
		rawtile.cpp \
		memorycache.cpp \
		cache.cpp \
		languagetype.cpp \
		providerstrings.cpp \
		cacheitemqueue.cpp \
		tilecachequeue.cpp \
		alllayersoftype.cpp \
		urlfactory.cpp \
		placemark.cpp \
		point.cpp \
		size.cpp \
		kibertilecache.cpp mocs\moc_maptype.cpp \
		mocs\moc_tilecachequeue.cpp \
		mocs\moc_urlfactory.cpp \
		mocs\moc_geodecoderstatus.cpp
OBJECTS       = objs/opmaps.o \
		objs/pureimagecache.o \
		objs/pureimage.o \
		objs/rawtile.o \
		objs/memorycache.o \
		objs/cache.o \
		objs/languagetype.o \
		objs/providerstrings.o \
		objs/cacheitemqueue.o \
		objs/tilecachequeue.o \
		objs/alllayersoftype.o \
		objs/urlfactory.o \
		objs/placemark.o \
		objs/point.o \
		objs/size.o \
		objs/kibertilecache.o \
		objs/moc_maptype.o \
		objs/moc_tilecachequeue.o \
		objs/moc_urlfactory.o \
		objs/moc_geodecoderstatus.o
DIST          = 
QMAKE_TARGET  = core
DESTDIR        = ..\build\ #avoid trailing-slash linebreak
TARGET         = libcore.a
DESTDIR_TARGET = ..\build\libcore.a

####### Implicit rules

.SUFFIXES: .cpp .cc .cxx .c

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

first: all
all: Makefile.Release  $(DESTDIR_TARGET)

$(DESTDIR_TARGET):  $(OBJECTS) 
	ar -M < object_script.libcore.Release 


qmake:  FORCE
	@$(QMAKE) -spec c:\Qt\2010.02.1\qt\mkspecs\win32-g++ -win32 -o Makefile.Release core.pro

dist:
	$(ZIP) core.zip $(SOURCES) $(DIST) c:\Users\Xapo\Documents\QT\OpenPilot\openpilotgcs.pro c:\Qt\2010.02.1\qt\mkspecs\qconfig.pri c:\Qt\2010.02.1\qt\mkspecs\features\qt_functions.prf c:\Qt\2010.02.1\qt\mkspecs\features\qt_config.prf c:\Qt\2010.02.1\qt\mkspecs\features\exclusive_builds.prf c:\Qt\2010.02.1\qt\mkspecs\features\default_pre.prf c:\Qt\2010.02.1\qt\mkspecs\features\win32\default_pre.prf ..\common.pri c:\Qt\2010.02.1\qt\mkspecs\features\release.prf c:\Qt\2010.02.1\qt\mkspecs\features\debug_and_release.prf c:\Qt\2010.02.1\qt\mkspecs\features\default_post.prf c:\Qt\2010.02.1\qt\mkspecs\features\win32\default_post.prf c:\Qt\2010.02.1\qt\mkspecs\features\build_pass.prf c:\Qt\2010.02.1\qt\mkspecs\features\staticlib.prf c:\Qt\2010.02.1\qt\mkspecs\features\static.prf c:\Qt\2010.02.1\qt\mkspecs\features\win32\rtti.prf c:\Qt\2010.02.1\qt\mkspecs\features\win32\exceptions.prf c:\Qt\2010.02.1\qt\mkspecs\features\win32\stl.prf c:\Qt\2010.02.1\qt\mkspecs\features\warn_on.prf c:\Qt\2010.02.1\qt\mkspecs\features\qt.prf c:\Qt\2010.02.1\qt\mkspecs\features\win32\thread.prf c:\Qt\2010.02.1\qt\mkspecs\features\moc.prf c:\Qt\2010.02.1\qt\mkspecs\features\win32\windows.prf c:\Qt\2010.02.1\qt\mkspecs\features\resources.prf c:\Qt\2010.02.1\qt\mkspecs\features\uic.prf c:\Qt\2010.02.1\qt\mkspecs\features\yacc.prf c:\Qt\2010.02.1\qt\mkspecs\features\lex.prf  HEADERS RESOURCES IMAGES SOURCES OBJECTIVE_SOURCES FORMS YACCSOURCES YACCSOURCES LEXSOURCES 

clean: compiler_clean 
	-$(DEL_FILE) objs\opmaps.o objs\pureimagecache.o objs\pureimage.o objs\rawtile.o objs\memorycache.o objs\cache.o objs\languagetype.o objs\providerstrings.o objs\cacheitemqueue.o objs\tilecachequeue.o objs\alllayersoftype.o objs\urlfactory.o objs\placemark.o objs\point.o objs\size.o objs\kibertilecache.o objs\moc_maptype.o objs\moc_tilecachequeue.o objs\moc_urlfactory.o objs\moc_geodecoderstatus.o

distclean: clean
	-$(DEL_FILE) $(DESTDIR_TARGET)
	-$(DEL_FILE) Makefile.Release

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: mocs/moc_maptype.cpp mocs/moc_tilecachequeue.cpp mocs/moc_urlfactory.cpp mocs/moc_geodecoderstatus.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) mocs\moc_maptype.cpp mocs\moc_tilecachequeue.cpp mocs\moc_urlfactory.cpp mocs\moc_geodecoderstatus.cpp
mocs/moc_maptype.cpp: maptype.h
	C:/Qt/2010.02.1/qt/bin\moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 maptype.h -o mocs\moc_maptype.cpp

mocs/moc_tilecachequeue.cpp: cacheitemqueue.h \
		maptype.h \
		point.h \
		pureimagecache.h \
		pureimage.h \
		cache.h \
		debugheader.h \
		tilecachequeue.h
	C:/Qt/2010.02.1/qt/bin\moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 tilecachequeue.h -o mocs\moc_tilecachequeue.cpp

mocs/moc_urlfactory.cpp: providerstrings.h \
		pureimagecache.h \
		maptype.h \
		point.h \
		pureimage.h \
		../internals/pointlatlng.h \
		../internals/sizelatlng.h \
		geodecoderstatus.h \
		cache.h \
		debugheader.h \
		placemark.h \
		urlfactory.h
	C:/Qt/2010.02.1/qt/bin\moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 urlfactory.h -o mocs\moc_urlfactory.cpp

mocs/moc_geodecoderstatus.cpp: geodecoderstatus.h
	C:/Qt/2010.02.1/qt/bin\moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 geodecoderstatus.h -o mocs\moc_geodecoderstatus.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 



####### Compile

objs/opmaps.o: opmaps.cpp opmaps.h \
		debugheader.h \
		memorycache.h \
		rawtile.h \
		maptype.h \
		point.h \
		kibertilecache.h \
		cache.h \
		pureimagecache.h \
		pureimage.h \
		accessmode.h \
		languagetype.h \
		cacheitemqueue.h \
		tilecachequeue.h \
		alllayersoftype.h \
		urlfactory.h \
		providerstrings.h \
		../internals/pointlatlng.h \
		../internals/sizelatlng.h \
		geodecoderstatus.h \
		placemark.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o objs\opmaps.o opmaps.cpp

objs/pureimagecache.o: pureimagecache.cpp pureimagecache.h \
		maptype.h \
		point.h \
		pureimage.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o objs\pureimagecache.o pureimagecache.cpp

objs/pureimage.o: pureimage.cpp pureimage.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o objs\pureimage.o pureimage.cpp

objs/rawtile.o: rawtile.cpp rawtile.h \
		maptype.h \
		point.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o objs\rawtile.o rawtile.cpp

objs/memorycache.o: memorycache.cpp memorycache.h \
		rawtile.h \
		maptype.h \
		point.h \
		kibertilecache.h \
		debugheader.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o objs\memorycache.o memorycache.cpp

objs/cache.o: cache.cpp cache.h \
		pureimagecache.h \
		maptype.h \
		point.h \
		pureimage.h \
		debugheader.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o objs\cache.o cache.cpp

objs/languagetype.o: languagetype.cpp languagetype.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o objs\languagetype.o languagetype.cpp

objs/providerstrings.o: providerstrings.cpp providerstrings.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o objs\providerstrings.o providerstrings.cpp

objs/cacheitemqueue.o: cacheitemqueue.cpp cacheitemqueue.h \
		maptype.h \
		point.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o objs\cacheitemqueue.o cacheitemqueue.cpp

objs/tilecachequeue.o: tilecachequeue.cpp tilecachequeue.h \
		cacheitemqueue.h \
		maptype.h \
		point.h \
		pureimagecache.h \
		pureimage.h \
		cache.h \
		debugheader.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o objs\tilecachequeue.o tilecachequeue.cpp

objs/alllayersoftype.o: alllayersoftype.cpp alllayersoftype.h \
		maptype.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o objs\alllayersoftype.o alllayersoftype.cpp

objs/urlfactory.o: urlfactory.cpp urlfactory.h \
		providerstrings.h \
		pureimagecache.h \
		maptype.h \
		point.h \
		pureimage.h \
		../internals/pointlatlng.h \
		../internals/sizelatlng.h \
		geodecoderstatus.h \
		cache.h \
		debugheader.h \
		placemark.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o objs\urlfactory.o urlfactory.cpp

objs/placemark.o: placemark.cpp placemark.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o objs\placemark.o placemark.cpp

objs/point.o: point.cpp point.h \
		size.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o objs\point.o point.cpp

objs/size.o: size.cpp size.h \
		point.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o objs\size.o size.cpp

objs/kibertilecache.o: kibertilecache.cpp kibertilecache.h \
		rawtile.h \
		maptype.h \
		point.h \
		debugheader.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o objs\kibertilecache.o kibertilecache.cpp

objs/moc_maptype.o: mocs/moc_maptype.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o objs\moc_maptype.o mocs\moc_maptype.cpp

objs/moc_tilecachequeue.o: mocs/moc_tilecachequeue.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o objs\moc_tilecachequeue.o mocs\moc_tilecachequeue.cpp

objs/moc_urlfactory.o: mocs/moc_urlfactory.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o objs\moc_urlfactory.o mocs\moc_urlfactory.cpp

objs/moc_geodecoderstatus.o: mocs/moc_geodecoderstatus.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o objs\moc_geodecoderstatus.o mocs\moc_geodecoderstatus.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

